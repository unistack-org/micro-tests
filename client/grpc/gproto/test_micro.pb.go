// Code generated by protoc-gen-go-micro. DO NOT EDIT.
// protoc-gen-go-micro version: v3.5.3
// source: test.proto

package helloworld

import (
	context "context"
	proto "go.unistack.org/micro-tests/client/grpc/proto"
	api "go.unistack.org/micro/v3/api"
	client "go.unistack.org/micro/v3/client"
)

var (
	TestName = "Test"

	TestEndpoints = []api.Endpoint{}
)

func NewTestEndpoints() []api.Endpoint {
	return TestEndpoints
}

type TestClient interface {
	Call(ctx context.Context, req *proto.Request, opts ...client.CallOption) (*proto.Response, error)
	Stream(ctx context.Context, opts ...client.CallOption) (Test_StreamClient, error)
}

type Test_StreamClient interface {
	Context() context.Context
	SendMsg(msg interface{}) error
	RecvMsg(msg interface{}) error
	Close() error
	Send(msg *proto.Request) error
	Recv() (*proto.Response, error)
}

type TestServer interface {
	Call(ctx context.Context, req *proto.Request, rsp *proto.Response) error
	Stream(ctx context.Context, stream Test_StreamStream) error
}

type Test_StreamStream interface {
	Context() context.Context
	SendMsg(msg interface{}) error
	RecvMsg(msg interface{}) error
	Close() error
	Recv() (*proto.Request, error)
	Send(msg *proto.Response) error
}
