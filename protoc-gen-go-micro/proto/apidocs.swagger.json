# Generated with protoc-gen-go-micro

openapi: 3.0.3
info:
    title: test title
    description: test desc
    version: 0.0.5
servers:
    - url: '{proto}://{sub}.example.com/v1'
      description: server
      variables:
        proto:
            enum:
                - http
                - https
            default: http
            description: protocols
        sub:
            enum:
                - test
                - prod
            default: test
            description: subdomain
    - url: https://other.example.com/v1
      description: other test server
paths:
    /aml:
        post:
            tags:
                - TestService
            operationId: TestService_KzAmlRs
            parameters:
                - name: kzAmlNewOnlineRs.rquid
                  in: query
                  schema:
                    type: string
                - name: kzAmlNewOnlineRs.rqtm
                  in: query
                  schema:
                    type: string
                - name: kzAmlNewOnlineRs.status.status_code
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: kzAmlNewOnlineRs.terr_status
                  in: query
                  schema:
                    type: integer
                    format: int64
                - name: kzAmlNewOnlineRs.aml_status
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseAml'
    /users/image/upload:
        post:
            tags:
                - TestService
            operationId: TestService_UploadFile
            parameters:
                - name: image
                  in: query
                  schema:
                    type: string
                    format: bytes
                - name: file_name
                  in: query
                  schema:
                    type: string
                - name: doc_type
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ResponseImage'
    /users/multipart:
        post:
            tags:
                - TestService
            operationId: TestMultipart
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            $ref: '#/components/schemas/MultipartReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MultipartRsp'
    /users/test:
        get:
            tags:
                - TestService
            operationId: TestEndpoint
            parameters:
                - name: client_uid
                  in: header
                  required: true
                  schema:
                    type: string
                - name: csrftoken
                  in: cookie
                  required: true
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: string
                - name: client_uid
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
    /users/{id}:
        get:
            tags:
                - TestService
            operationId: TestService_UserByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: client_uid
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
    /users/{id}/image:
        get:
            tags:
                - TestService
            operationId: TestService_UserImageByID
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: client_uid
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/octet-stream: {}
components:
    schemas:
        MultipartReq:
            type: object
            properties:
                prefix:
                    type: string
                body:
                    type: string
                    format: bytes
        MultipartRsp:
            type: object
            properties: {}
        Response:
            type: object
            properties:
                encoded_id:
                    type: string
        ResponseAml:
            type: object
            properties:
                resp:
                    type: string
        ResponseImage:
            type: object
            properties: {}
tags:
    - name: TestService
