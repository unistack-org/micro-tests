// Code generated by protoc-gen-go-micro. DO NOT EDIT.
// versions:
// - protoc-gen-go-micro v3.10.1
// - protoc              v3.21.12
// source: test.proto

package pb

import (
	context "context"
	codec "go.unistack.org/micro-proto/v3/codec"
	v3 "go.unistack.org/micro-server-http/v3"
	client "go.unistack.org/micro/v3/client"
)

var (
	TestServiceName = "TestService"
)
var (
	TestServiceServerEndpoints = []v3.EndpointMetadata{
		{
			Name:   "TestService.TestMultipart",
			Path:   "/users/multipart",
			Method: "POST",
			Body:   "*",
			Stream: false,
		},
		{
			Name:   "TestService.TestEndpoint",
			Path:   "/users/test",
			Method: "GET",
			Body:   "",
			Stream: false,
		},
		{
			Name:   "TestService.UserByID",
			Path:   "/users/{id}",
			Method: "GET",
			Body:   "",
			Stream: false,
		},
		{
			Name:   "TestService.UserImageByID",
			Path:   "/users/{id}/image",
			Method: "GET",
			Body:   "",
			Stream: false,
		},
		{
			Name:   "TestService.UploadFile",
			Path:   "/users/image/upload",
			Method: "POST",
			Body:   "",
			Stream: false,
		},
		{
			Name:   "TestService.KzAmlRs",
			Path:   "/aml",
			Method: "POST",
			Body:   "",
			Stream: false,
		},
	}
)

type TestServiceClient interface {
	TestMultipart(ctx context.Context, req *MultipartReq, opts ...client.CallOption) (*MultipartRsp, error)
	TestEndpoint(ctx context.Context, req *Request, opts ...client.CallOption) (*Response, error)
	UserByID(ctx context.Context, req *Request, opts ...client.CallOption) (*Response, error)
	UserImageByID(ctx context.Context, req *Request, opts ...client.CallOption) (*codec.Frame, error)
	UploadFile(ctx context.Context, req *RequestImage, opts ...client.CallOption) (*ResponseImage, error)
	KzAmlRs(ctx context.Context, req *RequestAml, opts ...client.CallOption) (*ResponseAml, error)
}

type TestServiceServer interface {
	TestMultipart(ctx context.Context, req *MultipartReq, rsp *MultipartRsp) error
	TestEndpoint(ctx context.Context, req *Request, rsp *Response) error
	UserByID(ctx context.Context, req *Request, rsp *Response) error
	UserImageByID(ctx context.Context, req *Request, rsp *codec.Frame) error
	UploadFile(ctx context.Context, req *RequestImage, rsp *ResponseImage) error
	KzAmlRs(ctx context.Context, req *RequestAml, rsp *ResponseAml) error
}
