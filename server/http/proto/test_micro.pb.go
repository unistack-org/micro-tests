// Code generated by protoc-gen-go-micro. DO NOT EDIT.
// versions:
// - protoc-gen-go-micro v3.10.2
// - protoc              v3.21.12
// source: test.proto

package pb

import (
	context "context"
	v3 "go.unistack.org/micro-server-http/v3"
	client "go.unistack.org/micro/v3/client"
)

var (
	TestDoubleName = "TestDouble"
)
var (
	TestDoubleServerEndpoints = []v3.EndpointMetadata{
		{
			Name:   "TestDouble.CallDouble",
			Path:   "/v1/testdouble/call/name/{name}",
			Method: "POST",
			Body:   "*",
			Stream: false,
		},
	}
)

type TestDoubleClient interface {
	CallDouble(ctx context.Context, req *CallReq, opts ...client.CallOption) (*CallRsp, error)
}

type TestDoubleServer interface {
	CallDouble(ctx context.Context, req *CallReq, rsp *CallRsp) error
}

var (
	TestName = "Test"
)
var (
	TestServerEndpoints = []v3.EndpointMetadata{
		{
			Name:   "Test.CallRepeatedString",
			Path:   "/v1/test/call_repeated_string",
			Method: "POST",
			Body:   "*",
			Stream: false,
		},
		{
			Name:   "Test.CallRepeatedInt64",
			Path:   "/v1/test/call_repeated_int64",
			Method: "POST",
			Body:   "*",
			Stream: false,
		},
		{
			Name:   "Test.Call",
			Path:   "/v1/test/call/{name}",
			Method: "POST",
			Body:   "*",
			Stream: false,
		},
		{
			Name:   "Test.CallError",
			Path:   "/v1/test/callerror/{name}",
			Method: "POST",
			Body:   "*",
			Stream: false,
		},
	}
)

type TestClient interface {
	CallRepeatedString(ctx context.Context, req *CallReq, opts ...client.CallOption) (*CallRsp, error)
	CallRepeatedInt64(ctx context.Context, req *CallReq, opts ...client.CallOption) (*CallRsp, error)
	Call(ctx context.Context, req *CallReq, opts ...client.CallOption) (*CallRsp, error)
	CallError(ctx context.Context, req *CallReq1, opts ...client.CallOption) (*CallRsp1, error)
}

type TestServer interface {
	CallRepeatedString(ctx context.Context, req *CallReq, rsp *CallRsp) error
	CallRepeatedInt64(ctx context.Context, req *CallReq, rsp *CallRsp) error
	Call(ctx context.Context, req *CallReq, rsp *CallRsp) error
	CallError(ctx context.Context, req *CallReq1, rsp *CallRsp1) error
}
